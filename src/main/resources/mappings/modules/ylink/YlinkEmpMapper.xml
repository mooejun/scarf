<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mooejun.scarf.modules.ylink.dao.YlinkEmpMapper">
  <resultMap id="BaseResultMap" type="me.mooejun.scarf.modules.ylink.entity.YlinkEmp">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_no" jdbcType="VARCHAR" property="empNo" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_project" jdbcType="VARCHAR" property="empProject" />
    <result column="emp_sex" jdbcType="VARCHAR" property="empSex" />
    <result column="emp_level" jdbcType="INTEGER" property="empLevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, emp_no, emp_name, emp_project, emp_sex, emp_level
  </sql>
  <select id="selectByExample" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkEmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ylink_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylink_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ylink_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkEmp">
    insert into ylink_emp (emp_id, emp_no, emp_name, 
      emp_project, emp_sex, emp_level
      )
    values (#{empId,jdbcType=INTEGER}, #{empNo,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, 
      #{empProject,jdbcType=VARCHAR}, #{empSex,jdbcType=VARCHAR}, #{empLevel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkEmp">
    insert into ylink_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empNo != null">
        emp_no,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empProject != null">
        emp_project,
      </if>
      <if test="empSex != null">
        emp_sex,
      </if>
      <if test="empLevel != null">
        emp_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empNo != null">
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empProject != null">
        #{empProject,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        #{empSex,jdbcType=VARCHAR},
      </if>
      <if test="empLevel != null">
        #{empLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkEmp">
    update ylink_emp
    <set>
      <if test="empNo != null">
        emp_no = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empProject != null">
        emp_project = #{empProject,jdbcType=VARCHAR},
      </if>
      <if test="empSex != null">
        emp_sex = #{empSex,jdbcType=VARCHAR},
      </if>
      <if test="empLevel != null">
        emp_level = #{empLevel,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkEmp">
    update ylink_emp
    set emp_no = #{empNo,jdbcType=VARCHAR},
      emp_name = #{empName,jdbcType=VARCHAR},
      emp_project = #{empProject,jdbcType=VARCHAR},
      emp_sex = #{empSex,jdbcType=VARCHAR},
      emp_level = #{empLevel,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>