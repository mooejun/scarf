<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mooejun.scarf.modules.ylink.dao.YlinkProjectMapper">
  <resultMap id="BaseResultMap" type="me.mooejun.scarf.modules.ylink.entity.YlinkProject">
    <id column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="p_name" jdbcType="VARCHAR" property="pName" />
    <result column="useable" jdbcType="CHAR" property="useable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    p_id, p_name, useable
  </sql>
  <select id="selectByExample" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ylink_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylink_project
    where p_id = #{pId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ylink_project
    where p_id = #{pId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkProject">
    insert into ylink_project (p_id, p_name, useable
      )
    values (#{pId,jdbcType=INTEGER}, #{pName,jdbcType=VARCHAR}, #{useable,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkProject">
    insert into ylink_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pId != null">
        p_id,
      </if>
      <if test="pName != null">
        p_name,
      </if>
      <if test="useable != null">
        useable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="pName != null">
        #{pName,jdbcType=VARCHAR},
      </if>
      <if test="useable != null">
        #{useable,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkProject">
    update ylink_project
    <set>
      <if test="pName != null">
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="useable != null">
        useable = #{useable,jdbcType=CHAR},
      </if>
    </set>
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkProject">
    update ylink_project
    set p_name = #{pName,jdbcType=VARCHAR},
      useable = #{useable,jdbcType=CHAR}
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
</mapper>