<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mooejun.scarf.modules.ylink.dao.YlinkLeaveMapper">
  <resultMap id="BaseResultMap" type="me.mooejun.scarf.modules.ylink.entity.YlinkLeave">
    <id column="leave_id" jdbcType="INTEGER" property="leaveId" />
    <result column="leave_type" jdbcType="INTEGER" property="leaveType" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="sdatetime" jdbcType="TIMESTAMP" property="sdatetime" />
    <result column="edatetime" jdbcType="TIMESTAMP" property="edatetime" />
    <result column="days" jdbcType="REAL" property="days" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    leave_id, leave_type, emp_id, sdatetime, edatetime, days
  </sql>
  <select id="selectByExample" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkLeaveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ylink_leave
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylink_leave
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ylink_leave
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkLeave">
    insert into ylink_leave (leave_id, leave_type, emp_id, 
      sdatetime, edatetime, days
      )
    values (#{leaveId,jdbcType=INTEGER}, #{leaveType,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, 
      #{sdatetime,jdbcType=TIMESTAMP}, #{edatetime,jdbcType=TIMESTAMP}, #{days,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkLeave">
    insert into ylink_leave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="leaveId != null">
        leave_id,
      </if>
      <if test="leaveType != null">
        leave_type,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="sdatetime != null">
        sdatetime,
      </if>
      <if test="edatetime != null">
        edatetime,
      </if>
      <if test="days != null">
        days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="leaveId != null">
        #{leaveId,jdbcType=INTEGER},
      </if>
      <if test="leaveType != null">
        #{leaveType,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="sdatetime != null">
        #{sdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="edatetime != null">
        #{edatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="days != null">
        #{days,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkLeave">
    update ylink_leave
    <set>
      <if test="leaveType != null">
        leave_type = #{leaveType,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="sdatetime != null">
        sdatetime = #{sdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="edatetime != null">
        edatetime = #{edatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="days != null">
        days = #{days,jdbcType=REAL},
      </if>
    </set>
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.mooejun.scarf.modules.ylink.entity.YlinkLeave">
    update ylink_leave
    set leave_type = #{leaveType,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      sdatetime = #{sdatetime,jdbcType=TIMESTAMP},
      edatetime = #{edatetime,jdbcType=TIMESTAMP},
      days = #{days,jdbcType=REAL}
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </update>
</mapper>